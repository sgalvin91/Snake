//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : AIcontroller.hpp
//  @ Date : 16/04/2010
//  @ Author :
//
//


#if !defined(_AICONTROLLER_HPP)
#define _AICONTROLLER_HPP

#include "Controller.hpp"

class AIController : public Controller {
    public:

    int change_direction(int x,int y,int z)
    {
       check_direction();
        if (x > _thesnake->sprite.show_x(1))
        {
            if (right){_thesnake->direction_=1;}
            else{avoidence();}
        }
                else{
                    if (x < _thesnake->sprite.show_x(1))
                    {
                        if(left){_thesnake->direction_=2;}
                        else{avoidence();}
                    }
                            else {
                                if (y > _thesnake->sprite.show_y(1))
                                {
                                    if(up){_thesnake->direction_=3;}
                                    else{avoidence();}
                                }
                                    else{
                                        if (y < _thesnake->sprite.show_y(1))
                                        {
                                            if(down){_thesnake->direction_=4;}
                                            else{avoidence();}
                                        }
                                        }
                                }
                    }
        return _thesnake->direction_;
    }



    void alter_course()
    {
        for (unsigned int i = 2; i<_thesnake->sprite.size(); i++)
        {
            if (_thesnake->sprite.show_x(1)+20 == _thesnake->sprite.show_x(i) && _thesnake->sprite.show_y(1) == _thesnake->sprite.show_y(i))
            {
                right=false;
            }

                        if (_thesnake->sprite.show_x(1)-20 == _thesnake->sprite.show_x(i) && _thesnake->sprite.show_y(1) == _thesnake->sprite.show_y(i))
                        {
                          left=false;
                        }
                                    if (_thesnake->sprite.show_x(1) == _thesnake->sprite.show_x(i) && _thesnake->sprite.show_y(1)+20 == _thesnake->sprite.show_y(i))
                                    {
                                        up = false;
                                    }

                                                if (_thesnake->sprite.show_x(1) == _thesnake->sprite.show_x(i) && _thesnake->sprite.show_y(1)-20 == _thesnake->sprite.show_y(i))
                                                {
                                                    down=false;
                                                }



        }
    }


    void wall_change()
    {
            if (_thesnake->sprite.show_x(1)+20 > 840)
            {
                right=false;
            }
                        if (_thesnake->sprite.show_x(1)-20 < 60 )
                        {
                            left=false;
                        }

                                    if (_thesnake->sprite.show_y(1)+20  > 860)
                                    {
                                        up=false;
                                    }

                                                if (_thesnake->sprite.show_y(1)-20 < 80)
                                                {
                                                    down=false;
                                                }



    }

    void check_direction()
    {
        left=true;
        right=true;
        up=true;
        down=true;
         wall_change();
        alter_course();

    }

    void avoidence()
    {
        if (right && !left && !up && !down){_thesnake->direction_=1;}
        else if (right && left && _thesnake->sprite.show_x(1) < 390){_thesnake->direction_=1;}
        else if (left && !right && !up && !down){_thesnake->direction_=2;}
        else if (left && right && _thesnake->sprite.show_x(1) > 390){_thesnake->direction_=2;}
        else if (up && !left && !right && !down){_thesnake->direction_=3;}
        else if (up && down && _thesnake->sprite.show_y(1) < 390){_thesnake->direction_=3;}
        else if (down && !right && !up && !left){_thesnake->direction_=4;}
        else if (down && up && _thesnake->sprite.show_y(1) > 390){_thesnake->direction_=4;}
    }

    private:
    bool left,right,up,down;

};

#endif  //_AICONTROLLER_HPP
